[package]
name = "custos"
version = "0.1.1"
edition = "2021"
license = "MIT"
description = "A minimal OpenCL, CUDA and host CPU array manipulation engine / framework."
repository = "https://github.com/elftausend/custos"
keywords = ["CUDA", "OpenCL", "arrays", "matrix-computations", "deep-learning"]
categories = ["mathematics", "memory-management", "external-ffi-bindings"]
readme = "README.md"
# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
lazy_static = "1.4.0"

[features]
default = ["opencl"]
opencl = []
cuda = []
safe = []

[[example]]
name = "cuda_readme"
required-features = ["cuda"]

[[example]]
name = "cl_readme"
required-features = ["opencl"]

[[example]]
name = "unified_memory"
required-features = ["opencl"]

[[example]]
name = "simple"
required-features = ["opencl"]

[[example]]
name = "opencl_kernel_launch"
required-features = ["opencl"]

[[example]]
name = "cl_device"
required-features = ["opencl"]

[[test]]
name = "opencl_unified"
required-features = ["opencl"]

[dev-dependencies]
criterion = "0.3"

[[bench]]
name = "safe_vs_cache"
harness = false

#[[bench]]
#name = "fixed_size_vs_vec"
#harness = false

[[bench]]
name = "remove_value"
harness = false

#[[bench]]
#name = "gemm"
#harness = false
#required-features = ["opencl", "cuda"]

#[[bench]]
#name = "cuda_vs_opencl"
#harness = false
#required-features = ["opencl", "cuda"]